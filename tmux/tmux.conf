set -g status-interval 1

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window
bind C-b select-pane -t :.+

# Start numbering at 1
# set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# set -g aggressive-resize on

# Pane resizing
bind-key -n C-M-J resize-pane -D 5
bind-key -n C-M-K resize-pane -U 5
bind-key -n C-M-H resize-pane -L 5
bind-key -n C-M-L resize-pane -R 5

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Clipboard settings
set -g set-clipboard on
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
version_pat='s/^tmux[^0-9]*([.0-9]+).*/\1/p'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
tmux_version="$(tmux -V | sed -En "$version_pat")"
setenv -g tmux_version "$tmux_version"

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
  "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Splitting shortcuts
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Reload config
bind r source-file "$HOME/.tmux.conf" \; display-message "Config reloaded..."

# Window titles
set-window-option -g automatic-rename on
set-option -g allow-rename on
set-option -g set-titles on

set -g default-terminal "xterm-256color"
set -as terminal-features ",$TERM:RGB"

# Hide status bar
set -g status on

set-option -g status-position bottom

# Disable the mouse
set -g mouse off

# Load plugins and initialize TPM
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-yank"
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'erikw/tmux-dark-notify'

set -g @theme_left_separator ''
set -g @theme_right_separator ''
set -g @plugin 'felixjung/tmux-tokyonight'

set -g @dark-notify-theme-path-light '$DOTFILES/tmux/themes/tokyonight-day.tmux'
set -g @dark-notify-theme-path-dark '$DOTFILES/tmux/themes/tokyonight-storm.tmux'

run "$HOME/.tmux/plugins/tpm/tpm"

if-shell "test -e ~/.local/state/tmux/tmux-dark-notify-theme.conf" \
     "source-file ~/.local/state/tmux/tmux-dark-notify-theme.conf"
