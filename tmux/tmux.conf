# Enable UTF-8
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

set -g status-interval 1

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window
bind C-b select-pane -t :.+

# Start numbering at 1
# set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# set -g aggressive-resize on

# Pane resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Clipboard settings
set -g set-clipboard on
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Automatically rename window
set-window-option -g automatic-rename on
set-option -g allow-rename on

# rm mouse mode fail
# set -g mode-mouse off

# Set the terminal to 16 colors
set -g default-terminal "xterm-16color"
set -ga terminal-overrides ",xterm-16color:Tc"
set -ga terminal-overrides ",xterm*:Tc"
set -ga terminal-overrides ",screen*:Tc"

# Configure statusbar
set -g status-bg "colour10"
set -g message-command-fg "colour12"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "colour11"
set -g message-bg "colour11"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "colour12"
set -g message-command-bg "colour11"
set -g status-attr "none"
set -g pane-border-fg "colour10"
set -g status-left-attr "none"
setw -g window-status-fg "colour8"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour10"
setw -g window-status-activity-attr "underscore"
setw -g window-status-activity-fg "colour8"
setw -g window-status-separator ""
setw -g window-status-bg "colour10"
set -g status-left "#[fg=colour8,bg=colour10] #S #[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour8,bg=colour10] #h | #(date -u +%H:%M) "
setw -g window-status-format "#[fg=colour8,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour8,bg=colour10] [#I: #[fg=colour12,bg=colour10]#W#[fg=colour8,bg=colour10]] #[fg=colour10,bg=colour10,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour10,bg=colour11,nobold,nounderscore,noitalics]#[fg=colour01,bg=colour11, bold] #W #[fg=colour11,bg=colour10,nobold,nounderscore,noitalics]"
